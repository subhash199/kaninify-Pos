name: kaninify-EposRetail-Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      PROJECT_PATH: EposRetail/EposRetail.csproj
      APPINSTALLER_PATH: EposRetail/InstallerFiles\EposRetail.appinstaller
      BUILD_CONFIGURATION: Release
      CERTIFICATE_PATH: EposRetail/InstallerFiles\KaninifyCert.cer  # certificate stored inside the project

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build signed MSIX package
      run: >
        dotnet publish ${{ env.PROJECT_PATH }}
        -c ${{ env.BUILD_CONFIGURATION }}
        -f net9.0-windows10.0.19041.0
        /p:GenerateAppxPackageOnBuild=true
        /p:AppxPackageSigningEnabled=true
        /p:PackageCertificateKeyFile="${{ env.CERTIFICATE_PATH }}"
        /p:PackageCertificatePassword="${{ secrets.PFX_PASSWORD }}"

    - name: Find built MSIX
      id: find_msix
      shell: pwsh
      run: |
        $msix = Get-ChildItem -Path EposRetail\bin\Release -Filter "*.msix" -Recurse | Select-Object -First 1
        echo "msix=$($msix.FullName)" >> $env:GITHUB_OUTPUT

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "v${{ github.run_number }}"
        name: "EposRetail v${{ github.run_number }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "v${{ github.run_number }}"
        files: |
          ${{ steps.find_msix.outputs.msix }}
          ${{ env.APPINSTALLER_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
