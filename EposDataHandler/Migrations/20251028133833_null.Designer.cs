// <auto-generated />
using System;
using EntityFrameworkDatabaseLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataHandlerLibrary.Migrations
{
    [DbContext(typeof(DatabaseInitialization))]
    [Migration("20251028133833_null")]
    partial class @null
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataHandlerLibrary.Models.DayLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cash_Variance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Closing_Cash_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DayLog_End_DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DayLog_Start_DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<decimal>("Opening_Cash_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("SiteId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_DayLog_Status");

                    b.HasIndex("TillId");

                    b.ToTable("DayLogs");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.DeliveryInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("DayLogId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("integer");

                    b.Property<decimal>("InvoiceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvoiceVatTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Shift_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("integer");

                    b.Property<int>("SyncStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<int>("TotalItemsDelivered")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_By_Id");

                    b.HasIndex("DayLogId");

                    b.HasIndex("Last_Modified_By_Id");

                    b.HasIndex("Shift_Id");

                    b.HasIndex("Site_Id");

                    b.HasIndex("Till_Id");

                    b.HasIndex("SupplierId", "InvoiceId")
                        .IsUnique();

                    b.ToTable("DeliveryInvoices");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.DeliveryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ConfirmedByScanner")
                        .HasColumnType("boolean");

                    b.Property<decimal>("CostPerCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeliveryInvoiceId")
                        .HasColumnType("integer");

                    b.Property<int?>("DeliveryInvoiceId1")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("QuantityDelivered")
                        .HasColumnType("integer");

                    b.Property<int?>("SupplierItemId")
                        .HasColumnType("integer");

                    b.Property<int>("SyncStatus")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryInvoiceId");

                    b.HasIndex("DeliveryInvoiceId1");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierItemId");

                    b.ToTable("DeliveryItems");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.DrawerLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DayLog_Id")
                        .HasColumnType("integer");

                    b.Property<int>("DrawerLogType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DrawerOpenDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int>("OpenedById")
                        .HasColumnType("integer");

                    b.Property<int?>("Shift_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_By_Id");

                    b.HasIndex("DayLog_Id");

                    b.HasIndex("Last_Modified_By_Id");

                    b.HasIndex("OpenedById");

                    b.HasIndex("Shift_Id");

                    b.HasIndex("Site_Id");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_DrawerLog_SyncStatus");

                    b.HasIndex("Till_Id");

                    b.ToTable("DrawerLogs");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Application_Version")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Error_DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Error_Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Error_Type")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Is_Resolved")
                        .HasColumnType("boolean");

                    b.Property<string>("Resolution_Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int?>("Resolved_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Resolved_DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Severity_Level")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Source_Class")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Source_Method")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Stack_Trace")
                        .HasColumnType("text");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<string>("User_Action")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("User_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Error_DateTime")
                        .HasDatabaseName("IX_ErrorLog_Error_DateTime");

                    b.HasIndex("Is_Resolved")
                        .HasDatabaseName("IX_ErrorLog_Is_Resolved");

                    b.HasIndex("Resolved_By_Id");

                    b.HasIndex("Severity_Level")
                        .HasDatabaseName("IX_ErrorLog_Severity_Level");

                    b.HasIndex("Site_Id");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_ErrorLog_SyncStatus");

                    b.HasIndex("Till_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.Payout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Payout_Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("SiteId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_Payout_SyncStatus");

                    b.HasIndex("TillId");

                    b.ToTable("Payouts");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.ReceiptPrinter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Primary")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Paper_Width")
                        .HasColumnType("integer");

                    b.Property<bool>("Print_Label")
                        .HasColumnType("boolean");

                    b.Property<bool>("Print_Receipt")
                        .HasColumnType("boolean");

                    b.Property<string>("Printer_IP_Address")
                        .HasColumnType("text");

                    b.Property<string>("Printer_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Printer_Password")
                        .HasColumnType("text");

                    b.Property<int?>("Printer_Port_Number")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("SiteId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_ReceiptPrinter_SyncStatus");

                    b.HasIndex("TillId");

                    b.ToTable("ReceiptPrinters");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.Retailer", b =>
                {
                    b.Property<Guid>("RetailerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApiUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Business_Hours")
                        .HasColumnType("text");

                    b.Property<string>("Business_Registration_Number")
                        .HasColumnType("text");

                    b.Property<string>("Business_Type")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact_Name")
                        .HasColumnType("text");

                    b.Property<string>("Contact_Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact_Position")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("County")
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstLine_Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLicenseValid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLicenseCheck")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastSyncedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Last_Sign_In_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LicenseExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LicenseIssueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LicenseKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseType")
                        .HasColumnType("text");

                    b.Property<string>("Logo_Path")
                        .HasColumnType("text");

                    b.Property<int>("MaxTills")
                        .HasColumnType("integer");

                    b.Property<int>("MaxUsers")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RetailName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecondLine_Address")
                        .HasColumnType("text");

                    b.Property<string>("SecretKey")
                        .HasColumnType("text");

                    b.Property<int>("SyncStatus")
                        .HasColumnType("integer");

                    b.Property<int>("SyncVersion")
                        .HasColumnType("integer");

                    b.Property<string>("TimeZone")
                        .HasColumnType("text");

                    b.Property<int?>("TokenExpiryAt")
                        .HasColumnType("integer");

                    b.Property<string>("Vat_Number")
                        .HasColumnType("text");

                    b.Property<string>("Website_Url")
                        .HasColumnType("text");

                    b.HasKey("RetailerId");

                    b.ToTable("Retailers");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.StockTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DayLogId")
                        .HasColumnType("integer");

                    b.Property<int?>("From_Site_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("integer");

                    b.Property<int?>("Shift_Id")
                        .HasColumnType("integer");

                    b.Property<int>("StockTransactionType")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("To_Site_Id")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Created_By_Id");

                    b.HasIndex("DayLogId");

                    b.HasIndex("From_Site_Id");

                    b.HasIndex("Last_Modified_By_Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_StockTransaction_SyncStatus");

                    b.HasIndex("Till_Id");

                    b.HasIndex("To_Site_Id");

                    b.ToTable("StockTransactions");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.SyncedLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordId")
                        .HasColumnType("integer");

                    b.Property<string>("SyncLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("SyncedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SyncedLogs");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.TableTracker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("integer");

                    b.Property<string>("NewRecord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OldRecord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Operation")
                        .HasColumnType("integer");

                    b.Property<int?>("PosUserId")
                        .HasColumnType("integer");

                    b.Property<int>("RecordId")
                        .HasColumnType("integer");

                    b.Property<string>("RecordName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PosUserId");

                    b.HasIndex("SiteId");

                    b.HasIndex("TillId");

                    b.ToTable("TableTrackers");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.UnSyncedLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastSyncedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordId")
                        .HasColumnType("integer");

                    b.Property<string>("SyncError")
                        .HasColumnType("text");

                    b.Property<int>("SyncRetryCount")
                        .HasColumnType("integer");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SyncStatus");

                    b.ToTable("UnSyncedLogs");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.UnknownProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DaylogId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProductBarcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DaylogId");

                    b.HasIndex("ProductBarcode")
                        .IsUnique()
                        .HasDatabaseName("IX_UnknownProduct_ProductBarcode");

                    b.HasIndex("ShiftId");

                    b.HasIndex("SiteId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_UnknownProduct_SyncStatus");

                    b.HasIndex("TillId");

                    b.ToTable("UnknownProducts");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Percentage")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Min_Basket_Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<int>("SyncStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Valid_From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Valid_To")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Voucher_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Voucher_Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Voucher_Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Created_By_Id");

                    b.HasIndex("Last_Modified_By_Id");

                    b.HasIndex("Site_Id");

                    b.HasIndex("Till_Id");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.VoucherDepartmentExclusion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int>("VoucherId")
                        .HasColumnType("integer");

                    b.Property<int?>("VoucherId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherId1");

                    b.ToTable("VoucherDepartmentExclusions");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.VoucherProductExclusion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("VoucherId")
                        .HasColumnType("integer");

                    b.Property<int?>("VoucherId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherId1");

                    b.ToTable("VoucherProductExclusions");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Age_Restricted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allow_Staff_Discount")
                        .HasColumnType("boolean");

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Department_Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Is_Activated")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Separate_Sales_In_Reports")
                        .HasColumnType("boolean");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Stock_Refill_Print")
                        .HasColumnType("boolean");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("SiteId");

                    b.HasIndex("TillId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.PosUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Allowed_Change_Price")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Day_End")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Discount")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Departments")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Orders")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Products")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Promotions")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Reports")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Settings")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Sites")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_StockTransfer")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Suppliers")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Tax_Rates")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Tills")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Users")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_Vat")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Manage_VoidedProducts")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_No_Sale")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Override_Price")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Payout")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Refund")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Returns")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Void_Line")
                        .HasColumnType("boolean");

                    b.Property<bool>("Allowed_Void_Sale")
                        .HasColumnType("boolean");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Is_Activated")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Passcode")
                        .HasColumnType("integer");

                    b.Property<int?>("Primary_Site_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<int>("User_Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Primary_Site_Id");

                    b.HasIndex("Site_Id");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_PosUser_SyncStatus");

                    b.HasIndex("Till_Id");

                    b.ToTable("PosUsers");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Allow_Discount")
                        .HasColumnType("boolean");

                    b.Property<string>("Brand_Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Department_ID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Expiry_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("GlobalId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Is_Activated")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Price_Changed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Priced_Changed_On")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Product_Barcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Product_Case_Barcode")
                        .HasColumnType("text");

                    b.Property<decimal>("Product_Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Product_Cost_Per_Case")
                        .HasColumnType("numeric");

                    b.Property<string>("Product_Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Product_Low_Stock_Alert_QTY")
                        .HasColumnType("integer");

                    b.Property<string>("Product_Measurement")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("Product_Min_Order")
                        .HasColumnType("integer");

                    b.Property<int>("Product_Min_Stock_Level")
                        .HasColumnType("integer");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Product_Selling_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Product_Size")
                        .HasColumnType("integer");

                    b.Property<int>("Product_Unit_Per_Case")
                        .HasColumnType("integer");

                    b.Property<decimal>("Profit_On_Return_Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Promotion_Id")
                        .HasColumnType("integer");

                    b.Property<int>("ShelfQuantity")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<int>("StockroomQuantity")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<int>("VAT_ID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Department_ID");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("Product_Barcode")
                        .IsUnique();

                    b.HasIndex("Promotion_Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_Product_SyncStatus");

                    b.HasIndex("TillId");

                    b.HasIndex("VAT_ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Buy_Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Discount_Amount")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Discount_Percentage")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Free_Quantity")
                        .HasColumnType("integer");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Minimum_Spend_Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Promotion_Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Promotion_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Promotion_Type")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("SiteId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_Promotion_SyncStatus");

                    b.HasIndex("TillId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.SalesItemTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Discount_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Discount_Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Is_Manual_Weight_Entry")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<decimal>("Product_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Product_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Product_QTY")
                        .HasColumnType("integer");

                    b.Property<decimal>("Product_Total_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Product_Total_Amount_Before_Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Promotion_ID")
                        .HasColumnType("integer");

                    b.Property<int>("SaleTransaction_ID")
                        .HasColumnType("integer");

                    b.Property<int?>("SalesItemTransactionType")
                        .HasColumnType("integer");

                    b.Property<int?>("SalesPayout_ID")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Created_By_Id");

                    b.HasIndex("Last_Modified_By_Id");

                    b.HasIndex("Product_ID");

                    b.HasIndex("Promotion_ID");

                    b.HasIndex("SaleTransaction_ID");

                    b.HasIndex("SalesPayout_ID");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_SalesItemTransaction_SyncStatus");

                    b.ToTable("SalesItemTransactions");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.SalesTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DayLog_Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Is_Printed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<decimal>("SaleTransaction_Card")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_Card_Charges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_CashBack")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_Change")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_Discount")
                        .HasColumnType("decimal(18,2");

                    b.Property<decimal>("SaleTransaction_Payout")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_Promotion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_Refund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_Total_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaleTransaction_Total_Paid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SaleTransaction_Total_QTY")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Sale_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Sale_Start_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("integer");

                    b.Property<int?>("Shift_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_By_Id");

                    b.HasIndex("DayLog_Id");

                    b.HasIndex("Last_Modified_By_Id");

                    b.HasIndex("ShiftId");

                    b.HasIndex("Shift_Id");

                    b.HasIndex("Site_Id");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_SalesTransaction_SyncStatus");

                    b.HasIndex("Till_Id");

                    b.ToTable("SalesTransactions");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Cash_Variance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Closing_Cash_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Closing_Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DayLog_Id")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Expected_Cash_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Opening_Cash_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PosUser_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Shift_End_DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Shift_Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("Shift_Start_DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("DayLog_Id");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("PosUser_Id");

                    b.HasIndex("Site_Id");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_Shift_SyncStatus");

                    b.HasIndex("Till_Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Primary")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Site_AddressLine1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Site_AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("Site_BusinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Site_City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Site_ContactNumber")
                        .HasColumnType("text");

                    b.Property<string>("Site_Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Site_County")
                        .HasColumnType("text");

                    b.Property<string>("Site_Email")
                        .HasColumnType("text");

                    b.Property<string>("Site_Postcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Site_VatNumber")
                        .HasColumnType("text");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Created_By_Id");

                    b.HasIndex("Last_Modified_By_Id");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_Site_SyncStatus");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.StockRefill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Confirmed_By_Scanner")
                        .HasColumnType("boolean");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DayLog_ID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Quantity_Refilled")
                        .HasColumnType("integer");

                    b.Property<int>("Refill_Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("Refilled_By")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Refilled_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SaleTransaction_Item_ID")
                        .HasColumnType("integer");

                    b.Property<int?>("Shift_ID")
                        .HasColumnType("integer");

                    b.Property<bool>("Stock_Refilled")
                        .HasColumnType("boolean");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Created_By_ID");

                    b.HasIndex("DayLog_ID");

                    b.HasIndex("Last_Modified_By_ID");

                    b.HasIndex("Refilled_By");

                    b.HasIndex("SaleTransaction_Item_ID");

                    b.HasIndex("Shift_ID");

                    b.HasIndex("Stock_Refilled")
                        .HasDatabaseName("IX_StockRefill_Stock_Refilled");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_StockRefill_SyncStatus");

                    b.ToTable("StockRefills");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Is_Activated")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Supplier_Address")
                        .HasColumnType("text");

                    b.Property<decimal?>("Supplier_Credit_Limit")
                        .HasColumnType("numeric");

                    b.Property<string>("Supplier_Description")
                        .HasColumnType("text");

                    b.Property<string>("Supplier_Email")
                        .HasColumnType("text");

                    b.Property<string>("Supplier_Mobile")
                        .HasColumnType("text");

                    b.Property<string>("Supplier_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Supplier_Phone")
                        .HasColumnType("text");

                    b.Property<string>("Supplier_Website")
                        .HasColumnType("text");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("SiteId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_Supplier_SyncStatus");

                    b.HasIndex("TillId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.SupplierItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost_Per_Case")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cost_Per_Unit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Product_OuterCaseBarcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Profit_On_Return")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.Property<string>("Supplier_Product_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Unit_Per_Case")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("ProductId");

                    b.HasIndex("SiteId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_SupplierItems_SyncStatus");

                    b.HasIndex("TillId");

                    b.ToTable("SupplierItems");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Till", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Primary")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Till_IP_Address")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Till_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Till_Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Till_Port_Number")
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Site_Id");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_Till_SyncStatus");

                    b.ToTable("Tills");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.UserSiteAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Date_Granted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date_Revoked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<int>("User_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Site_Id");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_UserSiteAccess_SyncStatus");

                    b.HasIndex("TillId");

                    b.HasIndex("User_Id");

                    b.ToTable("UserSiteAccesses");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Vat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<string>("VAT_Description")
                        .HasColumnType("text");

                    b.Property<string>("VAT_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("VAT_Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("SiteId");

                    b.HasIndex("TillId");

                    b.ToTable("Vats");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.VoidedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Additional_Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int?>("Created_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Created_By_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Daylog_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Last_Modified_ById")
                        .HasColumnType("integer");

                    b.Property<int?>("Last_Modified_By_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Product_ID")
                        .HasColumnType("integer");

                    b.Property<int?>("Shift_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Site_Id")
                        .HasColumnType("integer");

                    b.Property<long?>("Supa_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SyncStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TillId")
                        .HasColumnType("integer");

                    b.Property<int?>("Till_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Void_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Voided_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Voided_By_User_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Voided_Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Created_ById");

                    b.HasIndex("Daylog_Id");

                    b.HasIndex("Last_Modified_ById");

                    b.HasIndex("Product_ID");

                    b.HasIndex("Shift_Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("SyncStatus")
                        .HasDatabaseName("IX_VoidedProduct_SyncStatus");

                    b.HasIndex("TillId");

                    b.HasIndex("Voided_By_User_ID");

                    b.ToTable("VoidedProducts");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.DayLog", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.DeliveryInvoice", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_By_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DataHandlerLibrary.Models.DayLog", "DayLog")
                        .WithMany()
                        .HasForeignKey("DayLogId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_By_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("Shift_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("Till_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Created_By");

                    b.Navigation("DayLog");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Shift");

                    b.Navigation("Site");

                    b.Navigation("Supplier");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.DeliveryItem", b =>
                {
                    b.HasOne("DataHandlerLibrary.Models.DeliveryInvoice", "DeliveryInvoice")
                        .WithMany()
                        .HasForeignKey("DeliveryInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataHandlerLibrary.Models.DeliveryInvoice", null)
                        .WithMany("Items")
                        .HasForeignKey("DeliveryInvoiceId1");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.SupplierItem", "SupplierItem")
                        .WithMany()
                        .HasForeignKey("SupplierItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DeliveryInvoice");

                    b.Navigation("Product");

                    b.Navigation("SupplierItem");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.DrawerLog", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_By_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataHandlerLibrary.Models.DayLog", "DayLog")
                        .WithMany()
                        .HasForeignKey("DayLog_Id");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_By_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "OpenedBy")
                        .WithMany()
                        .HasForeignKey("OpenedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("Shift_Id");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("Till_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Created_By");

                    b.Navigation("DayLog");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("OpenedBy");

                    b.Navigation("Shift");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.ErrorLog", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Resolved_By")
                        .WithMany()
                        .HasForeignKey("Resolved_By_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("Till_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Resolved_By");

                    b.Navigation("Site");

                    b.Navigation("Till");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.Payout", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.ReceiptPrinter", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.StockTransaction", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_By_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataHandlerLibrary.Models.DayLog", "DayLog")
                        .WithMany()
                        .HasForeignKey("DayLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "From_Site")
                        .WithMany()
                        .HasForeignKey("From_Site_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_By_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("Till_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "To_Site")
                        .WithMany()
                        .HasForeignKey("To_Site_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Created_By");

                    b.Navigation("DayLog");

                    b.Navigation("From_Site");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Product");

                    b.Navigation("Shift");

                    b.Navigation("Till");

                    b.Navigation("To_Site");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.TableTracker", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "PosUser")
                        .WithMany()
                        .HasForeignKey("PosUserId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("PosUser");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.UnknownProduct", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DataHandlerLibrary.Models.DayLog", "Daylog")
                        .WithMany()
                        .HasForeignKey("DaylogId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedBy");

                    b.Navigation("Daylog");

                    b.Navigation("Shift");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.Voucher", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_By_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_By_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("Till_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.VoucherDepartmentExclusion", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataHandlerLibrary.Models.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataHandlerLibrary.Models.Voucher", null)
                        .WithMany("ExcludedDepartments")
                        .HasForeignKey("VoucherId1");

                    b.Navigation("Department");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.VoucherProductExclusion", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataHandlerLibrary.Models.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataHandlerLibrary.Models.Voucher", null)
                        .WithMany("ExcludedProducts")
                        .HasForeignKey("VoucherId1");

                    b.Navigation("Product");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Department", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.PosUser", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "PrimarySite")
                        .WithMany("PrimaryUsers")
                        .HasForeignKey("Primary_Site_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("Till_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PrimarySite");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Product", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Department", "Department")
                        .WithMany("Products")
                        .HasForeignKey("Department_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Promotion", "Promotion")
                        .WithMany("Products")
                        .HasForeignKey("Promotion_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Vat", "VAT")
                        .WithMany()
                        .HasForeignKey("VAT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Created_By");

                    b.Navigation("Department");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Promotion");

                    b.Navigation("Site");

                    b.Navigation("Till");

                    b.Navigation("VAT");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Promotion", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.SalesItemTransaction", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_By_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_By_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("Promotion_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.SalesTransaction", "SalesTransaction")
                        .WithMany("SalesItemTransactions")
                        .HasForeignKey("SaleTransaction_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataHandlerLibrary.Models.Payout", "SalesPayout")
                        .WithMany()
                        .HasForeignKey("SalesPayout_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Product");

                    b.Navigation("Promotion");

                    b.Navigation("SalesPayout");

                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.SalesTransaction", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_By_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataHandlerLibrary.Models.DayLog", "DayLog")
                        .WithMany()
                        .HasForeignKey("DayLog_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_By_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Shift", null)
                        .WithMany("SalesTransactions")
                        .HasForeignKey("ShiftId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("Shift_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("Till_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Created_By");

                    b.Navigation("DayLog");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Shift");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Shift", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("DataHandlerLibrary.Models.DayLog", "DayLog")
                        .WithMany()
                        .HasForeignKey("DayLog_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "PosUser")
                        .WithMany("Shifts")
                        .HasForeignKey("PosUser_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("Till_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Created_By");

                    b.Navigation("DayLog");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("PosUser");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Site", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_By_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_By_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.StockRefill", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By_User")
                        .WithMany()
                        .HasForeignKey("Created_By_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataHandlerLibrary.Models.DayLog", "DayLog")
                        .WithMany()
                        .HasForeignKey("DayLog_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By_User")
                        .WithMany()
                        .HasForeignKey("Last_Modified_By_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Refilled_By_User")
                        .WithMany()
                        .HasForeignKey("Refilled_By")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.SalesItemTransaction", "SalesItemTransaction")
                        .WithMany()
                        .HasForeignKey("SaleTransaction_Item_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("Shift_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Created_By_User");

                    b.Navigation("DayLog");

                    b.Navigation("Last_Modified_By_User");

                    b.Navigation("Refilled_By_User");

                    b.Navigation("SalesItemTransaction");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Supplier", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.SupplierItem", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Product", "Product")
                        .WithMany("SupplierItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Supplier", "Supplier")
                        .WithMany("SupplierItems")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Product");

                    b.Navigation("Site");

                    b.Navigation("Supplier");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Till", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany("Tills")
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Site");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.UserSiteAccess", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany("UserAccesses")
                        .HasForeignKey("Site_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "User")
                        .WithMany("SiteAccesses")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");

                    b.Navigation("Till");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Vat", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.Navigation("Created_By");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Site");

                    b.Navigation("Till");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.VoidedProduct", b =>
                {
                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Created_By")
                        .WithMany()
                        .HasForeignKey("Created_ById");

                    b.HasOne("DataHandlerLibrary.Models.DayLog", "Daylog")
                        .WithMany()
                        .HasForeignKey("Daylog_Id");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "Last_Modified_By")
                        .WithMany()
                        .HasForeignKey("Last_Modified_ById");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("Shift_Id");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.Till", "Till")
                        .WithMany()
                        .HasForeignKey("TillId");

                    b.HasOne("EntityFrameworkDatabaseLibrary.Models.PosUser", "VoidedByUser")
                        .WithMany()
                        .HasForeignKey("Voided_By_User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Created_By");

                    b.Navigation("Daylog");

                    b.Navigation("Last_Modified_By");

                    b.Navigation("Product");

                    b.Navigation("Shift");

                    b.Navigation("Site");

                    b.Navigation("Till");

                    b.Navigation("VoidedByUser");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.DeliveryInvoice", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DataHandlerLibrary.Models.Voucher", b =>
                {
                    b.Navigation("ExcludedDepartments");

                    b.Navigation("ExcludedProducts");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Department", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.PosUser", b =>
                {
                    b.Navigation("Shifts");

                    b.Navigation("SiteAccesses");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Product", b =>
                {
                    b.Navigation("SupplierItems");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Promotion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.SalesTransaction", b =>
                {
                    b.Navigation("SalesItemTransactions");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Shift", b =>
                {
                    b.Navigation("SalesTransactions");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Site", b =>
                {
                    b.Navigation("PrimaryUsers");

                    b.Navigation("Tills");

                    b.Navigation("UserAccesses");
                });

            modelBuilder.Entity("EntityFrameworkDatabaseLibrary.Models.Supplier", b =>
                {
                    b.Navigation("SupplierItems");
                });
#pragma warning restore 612, 618
        }
    }
}
